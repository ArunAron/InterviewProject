@model DataCore.Models.PurchaseOrder

<style>
</style>
<div class="card card-body  col-lg-12" style="border-radius:10px">
    <div class="row">

        <div class=" col-lg-6 mt-10"><h4 class="panel-title font-weight-bold mt-20">Purchase Order Edit</h4></div>
        <div class="form-group col-lg-3">
            <label class="font-weight-bold">Purchase Order No</label>
            <input type="hidden" id="PurchaseOrderGUID" name="PurchaseOrderGUID" value="@Model.GUID"  />
            @Html.EditorFor(model => model.PurchaseOrderNo, new { htmlAttributes = new { @class = "form-control font-weight-bold", @id = "PurchaseOrderNo", @autocomplete = "off", @name = "PurchaseOrderNo", @onfocus = "onFocus('PurchaseOrderNo')", @readonly = "readonly", @style = "background-color:gainsboro" } })
        </div>
        <div class=" col-lg-3 ">
            <label class="font-weight-bold">Warehouse</label>
            <input type="text" id="Warehouse" class=" form-control font-weight-bold" style="background-color:gainsboro" readonly name="Warehouse" value="@Model.WarehouseName" />
        </div>
    </div>
    <hr class="bg-brown-800 mt-1" />
    <div class="">
        <!-- Search Fliters -->
        <div class=" mt-2  row">
            <div class="form-group col-lg-3 mt-1">
                <label class="font-weight-bold">Purchase Order Date</label>
                @Html.EditorFor(model => model.PurchaseOrderDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @id = "PurchaseOrderDate", @autocomplete = "off", @name = "PurchaseOrderDate", @onfocus = "onFocus('PurchaseOrderDate')" } })
            </div>
            <div class="form-group col-lg-3 mt-1">
                <label class="font-weight-bold">Supplier</label>
                @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control", @id = "SupplierName", @autocomplete = "off", @name = "SupplierName", @onfocus = "onFocus('Supplier')" } })
                @Html.HiddenFor(model => model.SupplierGUID, new { htmlAttributes = new { @id = "SupplierGUID", @name = "SupplierGUID" } })
            </div>
            <div class="form-group col-lg-3 mt-1">
                <label class="font-weight-bold">Company Location</label>
                @Html.EditorFor(model => model.CompanyLocation, new { htmlAttributes = new { @class = "form-control", @id = "CompanyLocation", @autocomplete = "off", @name = "CompanyLocation", @onfocus = "onFocus('CompanyLocation')" } })
            </div>
            <div class="form-group col-lg-3 mt-1">
                <label class="font-weight-bold">FarmerCode</label>
                @Html.EditorFor(model => model.FarmerCode, new { htmlAttributes = new { @class = "form-control", @id = "FarmerCode", @autocomplete = "off", @name = "FarmerCode", @onfocus = "onFocus('FarmerCode')" } })
            </div>
            <div class="form-group col-lg-3 mt-1">
                <label class="font-weight-bold">Vehicle Detail</label>
                @Html.EditorFor(model => model.VehicleDetails, new { htmlAttributes = new { @class = "form-control", @id = "VehicleDetail", @autocomplete = "off", @name = "VehicleDetail", @onfocus = "onFocus('VehicleDetail')" } })
                @*<input onfocus="onFocus('VehicleDetail')" type="text" id="VehicleDetail" class=" form-control " name="VehicleDetail" />*@
            </div>
        </div>

        <div class="panel panel-flat mt-4 " style="border-radius:10px">
            <div class="table-responsive" style="border-radius:10px">
                <table id="tblOne" class="table table-sm">
                    <thead class="">
                        <tr>
                            <th>#</th>
                            <th class="pl-1 pr-1 text-center">Material Name</th>
                            <th class="pl-1 pr-1 text-center" colspan="2">Quantity</th>
                            <th class="pl-1 pr-1 text-center" colspan="2">Weight Per Qty</th>
                            <th class="pl-1 pr-1 text-center" colspan="2">Total Weight</th>
                            <th class="pl-1 pr-1 text-center">Rate</th>
                            <th class="pl-1 pr-1 text-center">Amount</th>
                            <th class="pl-1 pr-1 text-center">Packing Detail</th>
                            <th class="pl-1 pr-1 text-center">Remark</th>
                            <th class="pl-1 pr-1 text-center"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{  var count = 1;
                            var ListCount = ViewBag.PurchaseOrderDetailList.Count;
                            foreach (var detail in ViewBag.PurchaseOrderDetailList)
                            {
                                var trID = "tr" + count;
                                var PurchaseOrderDetailGUIDID = "PurchaseOrderDetailGUID" + count;
                                var MaterialNameID = "MaterialName" + count;
                                var MaterialGUIDID = "MaterialGUID" + count;
                                var QuantityID = "Quantity" + count;
                                var QuantityUOMTypeID = "QuantityUOMType" + count;
                                var WeightPerQuantityID = "WeightPerQuantity" + count;
                                var WeightPerQuantityUOMTypeID = "WeightPerQuantityUOMType" + count;
                                var TotalWeightID = "TotalWeight" + count;
                                var TotalWeightUOMTypeID = "TotalWeightUOMType" + count;
                                var RateID = "Rate" + count;
                                var AmountID = "Amount" + count;
                                var PackingDetailID = "PackingDetail" + count;
                                var RemarkID = "Remark" + count;
                                var Add = "Add" + count;
                                var Remove = "Remove" + count;
                                <tr id="@trID">
                                    <td> <span>@count</span></td>
                                    <td class="pl-1 pr-1">
                                        <input value="@detail.MaterialName" style="min-width:150px" type="text" class="form-control" id="@MaterialNameID" name="@MaterialNameID" autocomplete="off" onkeydown="SetAutoComplete('@MaterialNameID', '@count')" ondblclick="doubleClick('@MaterialNameID', '@count')" onfocus="onFocus('@MaterialNameID')" />
                                        <input value="@detail.MaterialGUID" type="hidden" class="form-control" id="@MaterialGUIDID" name="@MaterialGUIDID" autocomplete="off" />
                                        <input value="@detail.GUID" type="hidden" class="form-control" id="@PurchaseOrderDetailGUIDID" name="@PurchaseOrderDetailGUIDID" autocomplete="off" />
                                    </td>
                                    <td class="pl-1 pr-0">
                                        <input value="@detail.Quantity" style="min-width:80px" type="number" class="form-control" id="@QuantityID" name="@QuantityID" autocomplete="off" onfocus="onFocus('@QuantityID')" min="0" oninput="validity.valid||(value='');" onkeyup="CalculateAmount('@count')" />
                                    </td>
                                    <td class="pl-0 pr-1">
                                        <select style="min-width:105px" id="@QuantityUOMTypeID" name="@QuantityUOMTypeID" class="form-control bg-light">
                                            @foreach (var umtype in ViewBag.UOMTypeList)
                                            {
                                                if (detail.QuantityUOMType == umtype.Type)
                                                {
                                                    <option selected value="@umtype.Type">@umtype.Type</option>
                                                }
                                                else
                                                {
                                                    <option value="@umtype.Type">@umtype.Type</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td class="pl-1 pr-0">
                                        <input value="@detail.WeightPerQuantity" style="min-width:80px" type="number" class="form-control" id="@WeightPerQuantityID" name="@WeightPerQuantityID" autocomplete="off" onfocus="onFocus('@WeightPerQuantityID')" min="0" oninput="validity.valid||(value='');" />
                                    </td>
                                    <td class="pl-0 pr-1">
                                        <select style="min-width:105px" id="@WeightPerQuantityUOMTypeID" name="@WeightPerQuantityUOMTypeID" class="form-control bg-light">
                                            @foreach (var umtype in ViewBag.UOMTypeList)
                                            {
                                                if (detail.WeightPerQuantityUOMType == umtype.Type)
                                                {
                                                    <option selected value="@umtype.Type">@umtype.Type</option>
                                                }
                                                else
                                                {
                                                    <option value="@umtype.Type">@umtype.Type</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td class="pl-1 pr-0">
                                        <input value="@detail.TotalWeight" style="min-width:80px" type="number" class="form-control" id="@TotalWeightID" name="@TotalWeightID" autocomplete="off" min="0" oninput="validity.valid||(value='');" />
                                    </td>
                                    <td class="pl-0 pr-1">
                                        <select style="min-width:105px" id="@TotalWeightUOMTypeID" name="@TotalWeightUOMTypeID" class="form-control bg-light">
                                            @foreach (var umtype in ViewBag.UOMTypeList)
                                            {
                                                if (detail.TotalWeightUOMType == umtype.Type)
                                                {
                                                    <option selected value="@umtype.Type">@umtype.Type</option>
                                                }
                                                else
                                                {
                                                    <option value="@umtype.Type">@umtype.Type</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td class="pl-1 pr-1">
                                        <input value="@detail.Rate" onfocus="onFocus('@RateID')" style="min-width:100px" type="number" class="form-control" id="@RateID" name="@RateID" autocomplete="off" min="0" oninput="validity.valid||(value='');" onkeyup="CalculateAmount('@count')" />
                                    </td>
                                    <td class="pl-1 pr-1">
                                        <input value="@detail.Amount" onfocus="onFocus('@AmountID')" style="min-width:100px" type="number" class="form-control" id="@AmountID" name="@AmountID" autocomplete="off" min="0" oninput="validity.valid||(value='');" />
                                    </td>
                                    <td class="pl-1 pr-1">
                                        <input value="@detail.PackingDetail" onfocus="onFocus('@PackingDetailID')" style="min-width:150px" type="text" class="form-control" id="@PackingDetailID" name="@PackingDetailID" autocomplete="off" />
                                    </td>
                                    <td class="pl-1 pr-1">
                                        <input value="@detail.Remark" style="min-width:150px" type="text" class="form-control" id="@RemarkID" name="@RemarkID" autocomplete="off" />
                                    </td>
                                    <td class="pl-1 pr-1">
                                        <div class="list-icons">
                                            @*<button type="button" id="@Remove" class="m-1 btn btn-sm btn-icon rounded-round  btn-danger" onclick="RemoveRow(@count)"><b><i class="icon-cross2"></i></b></button>*@
                                            @if (ListCount == count)
                                            {
                                                <button class="btn btn-sm btn-icon rounded-round  btn-success" id="@Add" onclick="AddNewRow(@count)">
                                                    <b><i class="icon-plus22"></i></b>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                count++;
                            }
                        }

                    </tbody>
                </table>

            </div>

        </div>

    </div>


</div>
<div class="text-right">
    <button id="savebutton" class="btn btn-labeled btn-labeled-right rounded-round btn-lg bg-teal-800 btn-labeled"><b><i class="icon-floppy-disk"></i></b> Update</button>
</div>
<input type="hidden" id="totalCount" name="totalCount" value="1" />

<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-slate-800" style="border-radius:0">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Save</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to save !
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="btnSubmit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        //$('#dtBasicExample').DataTable({
        //    searching: false,
        //});
       

        $('#savebutton').click(function () {
            var warehouse = $('#Warehouse').val();
            var errorexit = 0;
            if (warehouse == "") {
                $('#Warehouse').removeClass("hidden");
                errorexit++;
            }
            errorexit += CheckValidationAllRow();

            if (errorexit == 0) {
                $('#Type').addClass("hidden");
                $('#confirmModal').modal('show');
            }
        });

        $("#SupplierName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSupplierNameReturnGUID", "Common")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.SupplierName,
                                value: item.SupplierName,
                                id: item.GUID
                            };
                        }));
                    }

                })
            },
            select: function (event, ui) {
                $("#SupplierGUID").val(ui.item.id);
            },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });


    });

    $('#Warehouse').focus(function () {
        $('#Warehouse').addClass("hidden");
    });

    function CalculateAmount(count) {
        var Quantity = $('#Quantity' + count).val();
        var Rate = $('#Rate' + count).val();
        if (Quantity == null) {
            Quantity = 0;
        }
        if (Rate == null) {
            Rate = 0;
        }
      var Amount = Rate * Quantity;
        $('#Amount' + count).val(Amount);
    }

    function SetAutoComplete(id, count) {


        //var MaterialGUID = document.getElementById(id).value;
        //var warehouseID = $('#Warehouse').val();
        //var MaterialGUID = $('#MaterialGUID' + count).val();

        $('#' + id).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetMaterialNameReturnGUID", "Common")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.MaterialName,
                                value: item.MaterialName,
                                id: item.GUID
                            };
                        }));
                    }

                })
            },
            select: function (event, ui) {
                var mtID = "MaterialGUID" + count;
                var TotalWeightUOMTypeID = "TotalWeightUOMType" + count;
                var QuantityUOMTypeID = "QuantityUOMType" + count;
                var WeightPerQuantityUOMTypeID = "WeightPerQuantityUOMType" + count;

                $('#' + id).attr("readonly", true);
                $('#' + mtID).val(ui.item.id);

                $.ajax({
                    url:'@Url.Action("GetUOMByMaterialGUID", "Common")',
                    type: 'Post',
                    data: { Prefix: $('#' + mtID).val() },
                    success: function (data) {
                        var items = "";
                        $.each(data, function (i, val) {
                            items += "<option value='" + val.Type + "'>" + val.Type + "</option>";
                        });
                        $('#' + TotalWeightUOMTypeID).empty().html(items);
                        $('#' + QuantityUOMTypeID).empty().html(items);
                        $('#' + WeightPerQuantityUOMTypeID).empty().html(items);
                    }
                });
              },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });
    }


    function doubleClick(id, count) {

        if ($("#" + id).attr("readonly")) {
            $("#" + id).attr("readonly", false);
        }
    }

    function onFocus(id) {
        $("#" + id).removeClass("border-danger");
    }

    function checkValidationCurrentRow(count) {

        var checkMaterialName = $('#MaterialName' + count).val();
        var checkMaterialGUID = $('#MaterialGUID' + count).val();
        var checkQuantity = $('#Quantity' + count).val();
        var checkPackingDetail = $('#PackingDetail' + count).val();
        var checkRate = $('#Rate' + count).val();
        var checkAmount = $('#Amount' + count).val();

        var errorexit = 0;

        if (checkMaterialName == "") {
            $('#MaterialName' + count).addClass("border-danger");
            errorexit++;
        }
        if (checkMaterialGUID == "") {
            $('#MaterialName' + count).addClass("border-danger");
            errorexit++;
        }
        if (checkQuantity == "") {
            $('#Quantity' + count).addClass("border-danger");
            errorexit++;
        }
        if (checkRate == "") {
            $('#Rate' + count).addClass("border-danger");
            errorexit++;
        }
        if (checkAmount == "") {
            $('#Amount' + count).addClass("border-danger");
            errorexit++;
        }
        if (checkPackingDetail == "") {
            $('#PackingDetail' + count).addClass("border-danger");
            errorexit++;
        }
        return errorexit;
    }

    function CheckValidationAllRow() {
        var errorexit = 0;
        var count = 1;

        var PurchaseOrderNo = $('#PurchaseOrderNo').val();
        var SupplierGUID = $('#SupplierGUID').val();
        var CompanyLocation = $('#CompanyLocation').val();
        var PurchaseOrderDate = $('#PurchaseOrderDate').val();
        var VehicleDetail = $('#VehicleDetail').val();
        var CompanyLocation = $('#CompanyLocation').val();
        var FarmerCode = $('#FarmerCode').val();

        if (PurchaseOrderNo == "") {
            $('#PurchaseOrderNo').addClass("border-danger");
            errorexit++;
        }
        if (SupplierGUID == "") {
            $('#SupplierName').addClass("border-danger");
            errorexit++;
        }
        if (PurchaseOrderDate == "") {
            $('#PurchaseOrderDate').addClass("border-danger");
            errorexit++;
        }
        if (FarmerCode == "") {
            $('#FarmerCode').addClass("border-danger");
            errorexit++;
        }
        if (VehicleDetail == "") {
            $('#VehicleDetail').addClass("border-danger");
            errorexit++;
        }
        if (CompanyLocation == "") {
            $('#CompanyLocation').addClass("border-danger");
            errorexit++;
        }

        $('#tblOne > tbody > tr').each(function () {
            var MaterialName = $(this).find('#MaterialName' + count).val();
            var MaterialGUID = $(this).find('#MaterialGUID' + count).val();
            var Quantity = $(this).find('#Quantity' + count).val();
            var PackingDetail = $(this).find('#PackingDetail' + count).val();
            var Rate = $(this).find('#Rate' + count).val();
            var Amount = $(this).find('#Amount' + count).val();

            if (MaterialName == "") {
                $('#MaterialName' + count).addClass("border-danger");
                errorexit++;
            }
            if (MaterialGUID == "") {
                $('#MaterialName' + count).addClass("border-danger");
                errorexit++;
            }
           if (Quantity == "") {
                $('#Quantity' + count).addClass("border-danger");
                errorexit++;
            }
            if (PackingDetail == "") {
                $('#PackingDetail' + count).addClass("border-danger");
                errorexit++;
            }
            if (Rate == "") {
                $('#Rate' + count).addClass("border-danger");
                errorexit++;
            }
            if (Amount == "") {
                $('#Amount' + count).addClass("border-danger");
                errorexit++;
            }
            count++;
        });
        return errorexit;
    }

    function AddNewRow(count) {
        var errorexit = checkValidationCurrentRow(count);
        if (errorexit == 0) {
            //var idstringR = "#Remove" + count;
            //$(idstringR).attr("hidden", true);
            var idstringA = "#Add" + count;
            $(idstringA).attr("hidden", true);
            count++;

            $('#totalCount').val(count);
            var MaterialNameID = "MaterialName" + count;
            var MaterialGUID = "MaterialGUID" + count;

            var TotalWeight = "TotalWeight" + count;
            var TotalWeightUOMType = "TotalWeightUOMType" + count;

            var Quantity = "Quantity" + count;
            var QuantityUOMType = "QuantityUOMType" + count;

            var WeightPerQuantity = "WeightPerQuantity" + count;
            var WeightPerQuantityUOMType = "WeightPerQuantityUOMType" + count;

            var Rate = "Rate" + count;
            var Amount = "Amount" + count;

            var PackingDetail = "PackingDetail" + count;
            var Remark = "Remark" + count;

            var tr = "tr" + count;
            var Remove = "Remove" + count;
            var Add = "Add" + count;



            var td1 = '<td><span>' + count + '</span></td>';
            var td2 = '<td class="pl-1 pr-1"><input style="min-width:80px" onfocus="onFocus(\'' + MaterialNameID + '\')"  type="text" class="form-control" id="' + MaterialNameID + '" name="' + MaterialNameID + '" autocomplete="off"  onkeydown="SetAutoComplete(\'' + MaterialNameID + '\',\'' + count + '\')"  ondblclick="doubleClick(\'' + MaterialNameID + '\',\'' + count + '\')" />';
            td2 += '<input type="hidden" class="form-control" id="' + MaterialGUID + '" name="' + MaterialGUID + '" autocomplete="off" /></td>';
            var td3 = '<td class="pl-1 pr-0"><input style="min-width:80px" type="number" class="form-control" id="' + Quantity + '" name="' + Quantity + '"  onfocus="onFocus(\'' + Quantity + '\')"  autocomplete="off" min="1" oninput="validity.valid||(value=\'\');" onkeyup="CalculateAmount(\'' + count + '\')"  /></td>';
            td3 += '<td class="pl-0 pr-1"><select style="min-width:100px" id="' + QuantityUOMType + '" name="' + QuantityUOMType + '"  class="form-control bg-light"></select></td>'
            var td4 = '<td class="pl-1 pr-0"><input style="min-width:80px" type="number" class="form-control" id="' + WeightPerQuantity + '" name="' + WeightPerQuantity + '" autocomplete="off" min="1" oninput="validity.valid||(value=\'\');" /></td>';
            td4 += '<td class="pl-0 pr-1"> <select style="min-width:100px" id="' + WeightPerQuantityUOMType + '" name="' + WeightPerQuantityUOMType + '"  class="form-control bg-light"></select></td>'
            var td5 = '<td class="pl-1 pr-0"><input style="min-width:80px" type="number" class="form-control" id="' + TotalWeight + '" name="' + TotalWeight + '" autocomplete="off" min="1" oninput="validity.valid||(value=\'\');" /></td>';
            td5 += '<td class="pl-0 pr-1"><select style="min-width:100px" id="' + TotalWeightUOMType + '" name="' + TotalWeightUOMType + '"  class="form-control bg-light"></select></td>'
            var td6 = '<td class="pl-1 pr-1"><input onfocus="onFocus(\'' + Rate + '\')" type="number" class="form-control" id="' + Rate + '" name="' + Rate + '" autocomplete="off" min="1" oninput="validity.valid||(value=\'\');" onkeyup="CalculateAmount(\'' + count + '\')" /></td>';
            td6 += '<td class="pl-1 pr-1"><input onfocus="onFocus(\'' + Amount + '\')" type="number" class="form-control" id="' + Amount + '" name="' + Amount + '" autocomplete="off" min="1" oninput="validity.valid||(value=\'\');" /></td>';
            var td7 = '<td class="pl-1 pr-1"><input onfocus="onFocus(\'' + PackingDetail + '\')" type="text" class="form-control" id="' + PackingDetail + '" name="' + PackingDetail + '" autocomplete="off" /></td>';
            td7 += '<td class="pl-1 pr-1"><input onfocus="onFocus(\'' + Remark + '\')" type="text" class="form-control" id="' + Remark + '" name="' + Remark + '" autocomplete="off" /></td>';
            var td8 = '<td class="pl-1 pr-1"><div class="list-icons"><button type="button" id="' + Remove + '" class="m-1 btn btn-sm btn-icon rounded-round  btn-danger" onclick="RemoveRow(' + count + ')" ><b><i class="icon-cross2"></i></b></button>'; //repeat
            var td9 = '<button type="button" id="' + Add + '" class="m-1 btn btn-sm btn-icon rounded-round  btn-success" onclick="AddNewRow(' + count + ')" ><b><i class="icon-plus22"></i></b></button></div></td>';
            $("tbody").append('<tr id="' + tr + '">' + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 +'</tr>');
        }
    }
    function getAllData() {
        var PurchaseOrderGUID = $('#PurchaseOrderGUID').val();
        var WarehouseGUID = $('#Warehouse').val();
        var PurchaseOrderNo = $('#PurchaseOrderNo').val();
        var SupplierGUID = $('#SupplierGUID').val();
        var CompanyLocation = $('#CompanyLocation').val();
        var PurchaseOrderDate = $('#PurchaseOrderDate').val();
        var VehicleDetail = $('#VehicleDetail').val();
        var CompanyLocation = $('#CompanyLocation').val();
        var FarmerCode = $('#FarmerCode').val();

        var data = [];
        var count = 1;
        $('#tblOne > tbody > tr').each(function () {
            var PurchaseOrderDetailGUID = $(this).find('#PurchaseOrderDetailGUID' + count).val();
            var MaterialName = $(this).find('#MaterialName' + count).val();
            var MaterialGUID = $(this).find('#MaterialGUID' + count).val();
            var TotalWeight = $(this).find('#TotalWeight' + count).val();
            var TotalWeightUOMType = $(this).find('#TotalWeightUOMType' + count).val();
            var Quantity = $(this).find('#Quantity' + count).val();
            var QuantityUOMType = $(this).find('#QuantityUOMType' + count).val();
            var WeightPerQuantity = $(this).find('#WeightPerQuantity' + count).val();
            var WeightPerQuantityUOMType = $(this).find('#WeightPerQuantityUOMType' + count).val();
            var Rate = $(this).find('#Rate' + count).val();
            var Amount = $(this).find('#Amount' + count).val();
            var PackingDetail = $(this).find('#PackingDetail' + count).val();
            var Remark = $(this).find('#Remark' + count).val();

            var alldata = {
                'PurchaseOrderGUID': PurchaseOrderGUID,
                'WarehouseGUID': WarehouseGUID,
                'PurchaseOrderNo': PurchaseOrderNo,
                'SupplierGUID': SupplierGUID,
                'CompanyLocation': CompanyLocation,
                'PurchaseOrderDate': PurchaseOrderDate,
                'VehicleDetail': VehicleDetail,
                'FarmerCode': FarmerCode,
                'PurchaseOrderDetailGUID': PurchaseOrderDetailGUID,
                'MaterialGUID': MaterialGUID,
                'MaterialName': MaterialName,
                'TotalWeight': TotalWeight,
                'TotalWeightUOMType': TotalWeightUOMType,
                'Quantity': Quantity,
                'QuantityUOMType': QuantityUOMType,
                'WeightPerQuantity': WeightPerQuantity,
                'WeightPerQuantityUOMType': WeightPerQuantityUOMType,
                'Rate': Rate,
                'Amount': Amount,
                'PackingDetail': PackingDetail,
                'Remark': Remark,
            }
            data.push(alldata);
            count++;
        });
        console.log(data);
        return data;
    }

    function RemoveRow(count) {
        var idstring = "#tr" + count;
        $(idstring).remove();

        count--;
        $('#totalCount').val(count);
        var idstringR = "#Remove" + count;
        $(idstringR).attr("hidden", false);

        var idstringA = "#Add" + count;
        $(idstringA).attr("hidden", false);
    }

    $('#btnSubmit').click(function () {
        $.blockUI({
            message: '<i class="icon-spinner4 spinner"></i>',
            timeout: 2000, //unblock after 2 seconds
            overlayCSS: {
                backgroundColor: '#1b2024',
                opacity: 0.8,
                cursor: 'wait'
            },
            css: {
                border: 0,
                color: '#fff',
                padding: 0,
                backgroundColor: 'transparent'
            }
        });
        $('#confirmModal').modal('hide');
        var data = JSON.stringify(getAllData());
        $.ajax({
            url: '@Url.Action("EditPurchaseOrder", "PurchaseOrder")',
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ 'getepassdata': data }),
            success: function () {
                setTimeout(function () {
                    swal({
                        title: "Updated!",
                        text: "Your data has been updated successfully!!",
                            type: "success"
                            }).then(function() {
                           window.location = '@Url.Action("PurchaseOrderList", "PurchaseOrder")';
                            });
                }, 1000);

                //alert("Data Added Successfully");
            },
            error: function () {
                alert("Error while updating data");
            }
        });
    });




</script>



