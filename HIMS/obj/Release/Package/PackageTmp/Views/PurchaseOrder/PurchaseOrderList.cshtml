@model DataCore.SearchModel.SM_PurchaseOrder
<!-- Core JS files -->
<div class="col-lg-12">
    <div class="row">
        <div class=" col-sm-6"><h4 class="panel-title font-weight-bold">PurchaseOrder List</h4></div>
        <div class=" col-sm-6 text-right"><a class="btn btn-labeled btn-labeled-right bg-success-800 rounded-round  " href="@Url.Action("PurchaseOrder","PurchaseOrder")"><b><i class="icon icon-cart"></i></b>New Order</a></div>
    </div>
    <fieldset>
        <legend class="text-semibold">
            <i class="icon-search4 position-left"></i>
            Search Field
        </legend>
        <!-- Search Fliters -->

        @using (Html.BeginForm("SearchPurchaseOrder", "PurchaseOrder", FormMethod.Post, new { enctype = "multipart/form-data", @name = "form-addnewUser" }))
        {
            <div class="  mt-10 row ">
                <div class="form-group mt-1 col-lg-3">
                    <label class="font-weight-bold">Purchase Order No</label>
                    @Html.EditorFor(model => model.PurchaseOrderNo, new { htmlAttributes = new { @class = "form-control", @id = "SearchPurchaseOrderNo", @autocomplete = "off", @name = "SearchPurchaseOrderNo" } })
                    @*@Html.HiddenFor(model => model.PurchaseOrderID, new { htmlAttributes = new { @class = "form-control", @id = "SearchPurchaseOrderID", @autocomplete = "off", @name = "SearchPurchaseOrderID" } })*@
                </div>
                <div class="form-group mt-1 col-lg-3">
                    <label class="font-weight-bold">Supplier</label>
                    @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control", @id = "SupplierName", @autocomplete = "off", @name = "SupplierName" } })
                    @Html.HiddenFor(model => model.SupplierGUID, new { htmlAttributes = new { @class = "form-control", @id = "SupplierGUID", @autocomplete = "off", @name = "SupplierGUID" } })
                </div>
                <div class="col-lg-3 mt-1">
                    <label class="font-weight-bold">Warehouse</label>
                    <select id="Warehouse" name="Warehouse" class=" form-control">
                        @if (ViewBag.WarehouseList != null)
                        {
                            foreach (var data in ViewBag.WarehouseList)
                            {
                                if (Model.WarehouseGUID == data.GUID)
                                {
                                    <option selected value="@data.GUID">@data.WarehouseName</option>
                                }
                                else
                                {
                                    <option value="@data.GUID">@data.WarehouseName</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="col-lg-3 mt-1">
                    <label class="font-weight-bold">Status</label>
                    <select id="ApprovalStatus" name="ApprovalStatus" class="form-control">
                        @if (ViewBag.ApprovalStatusList != null)
                        {
                            foreach (var data in ViewBag.ApprovalStatusList)
                            {
                                if (Model.ApprovalStatus == data)
                                {
                                    <option selected value="@data">@data</option>
                                }
                                else
                                {
                                    <option value="@data">@data</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="col-lg-5  row">
                    <div class=" col-sm-6 mt-1">
                        <label class="font-weight-bold">Created From</label>
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @id = "FromDate", @autocomplete = "off", @name = "FromDate" } })
                    </div>
                    <div class=" col-sm-6 mt-1">
                        <label class="font-weight-bold">Created To</label>
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @id = "ToDate", @autocomplete = "off", @name = "ToDate" } })
                    </div>
                </div>
                <div class=" col-lg-2 text-right mt-1"><button class="btn btn-labeled btn-labeled-right bg-teal-700  rounded-round mt-4" type="submit"><b><i class="icon icon-search4"></i></b> Search </button></div>
            </div>
        }

    </fieldset>
    <hr />
    <div class="card mt-10 " style="border-radius:10px">
        <div class="table-responsive" style="border-radius:10px">
            <table class="table table-hover table-sm">
                <thead class="bg-slate-800">
                    <tr>
                        <th width="10%" class="text-center">Actions</th>
                        <th>#</th>
                        <th>Order No</th>
                        <th>Supplier</th>
                        <th>Order Date</th>
                        <th>Status</th>
                        <th>Approved Or Rejected By/Date</th>
                        <th>Updated By/Date</th>
                    </tr>
                </thead>
                <!-- Table Body -->
                <tbody id="tablebody">
                </tbody>
            </table>
        </div>
    </div>
    <!-- Pagination -->
    <div id="pagination"></div>
    <div id="PurchaseOrderDetail" class="modal  fade" tabindex="-1" role="dialog" aria-labelledby="myModal-label" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div id="PurchaseOrderDetailModal">
                </div>
            </div>
        </div>
    </div>
</div>







<script>

        var CurrentPage = @Html.Raw(Json.Encode(Model.CurrentPage));
        var TotalCount = @Html.Raw(Json.Encode(Model.TotalPage));
        var searchData = {
            'PurchaseOrderNo': @Html.Raw(Json.Encode(Model.PurchaseOrderNo)),
            'ApprovalStatus': @Html.Raw(Json.Encode(Model.ApprovalStatus)),
            'WarehouseGUID': @Html.Raw(Json.Encode(Model.WarehouseGUID)),
            'TotalCount': @Html.Raw(Json.Encode(Model.TotalCount)),
            'TotalPage': @Html.Raw(Json.Encode(Model.TotalPage)),
            'CurrentPage': @Html.Raw(Json.Encode(Model.CurrentPage)),
            'FromDate': @Html.Raw(Json.Encode(Model.FromDate)),
            'ToDate': @Html.Raw(Json.Encode(Model.ToDate)),
    }

    $('#DataEditFormModal').on('hidden.bs.modal', function () {
        $(this).data('modal', null);
        $("#EditFormModalBody").empty();
    });

    $('#PurchaseOrderDetail').on('hidden.bs.modal', function () {
        $(this).data('modal', null);
        $("#PurchaseOrderDetailModal").empty();
    });

    $(document).ready(function () {

        Pagination(CurrentPage, TotalCount);
        showlist("#tablebody", searchData);
        $("#SearchPurchaseOrderNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetPurchaseOrderNo", "Common")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.PurchaseOrderNo,
                                value: item.PurchaseOrderNo,
                                id: item.ID
                            };
                        }));
                    }

                })
            },
            select: function (event, ui) {
                //$("#PurchaseOrderID").val(ui.item.id);
            },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });

        $("#SupplierName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSupplierNameReturnGUID", "Common")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.SupplierName,
                                value: item.SupplierName,
                                id: item.GUID
                            };
                        }));
                    }

                })
            },
            select: function (event, ui) {
                $("#SupplierGUID").val(ui.item.id);
            },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });
    });

    function Edit(GUID) {

        BindEditForm(GUID, "Edit");
    }
    function Add() {

        BindEditForm("","Add");
    }
    function showlist(div, passdata) {
        var data = JSON.stringify(passdata);
            $.ajax({
            cache: false,
            url: '@Url.Action("PurchaseOrderListPartial", "PurchaseOrder")',
            contentType: 'application/json; charset=utf-8',
            data: { getpassdata: data},
            beforesend: function () {
                $(div).empty().append('<div class="text-center"><div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>');
                },
            success: function (myData) {
                 $(div).empty().append(myData);
                },
            complete: function () {
                }
            });
    }
    function Pagination(Page, Count) {
            $.ajax({
            cache: false,
            url: '@Url.Action("Pagination", "Common")',
            data: { Page: Page, Count: Count},
            //beforeSend: function () {
            //    $(div).empty().append('<div class="text-center"><div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>');
            //},
            success: function (myData) {
                $("#pagination").empty().append(myData);
            },
            complete: function () {
            }
        });
    }
    function GetTotalPage() {
        var data = JSON.stringify(passdata);
            $.ajax({
            cache: false,
            url: '@Url.Action("GetTotalPage", "PurchaseOrder")',
            data: { getpassdata: data},
            success: function (myData) {
                              searchData.TotalPage = myData;
            },
            complete: function () {
            }
        });
    }
    function Approve(GUID) {
           swal({
                title: "Are you sure you want to approve?",
                //text: "This Purchase Order will be approved!",
               type: "info",
               icon: "info",
               buttons: true,
               dangerMode: false,})
                .then((willDelete) => {
                    if (willDelete) {
                       $.ajax({
                        cache: false,
                        url: '@Url.Action("ApprovePurchaseOrder", "PurchaseOrder")',
                        contentType: 'application/json; charset=utf-8',
                        data: { GUID: GUID},

                        success: function (myData) {
                            if (myData == "Success") {

                                swal(" This Purchase Order has been approved !", {
                                icon: "success",});
                                Pagination(CurrentPage, TotalCount);
                                showlist("#tablebody", searchData);
                            }
                            else {
                                swal("", "Oops! Process Fail !!", "fail");
                            }
                         }

                     });

                    } else {
                        swal("Your data is reverted to default stage!");
                            }
                });
    }

    function Reject(GUID) {
           swal({
                title: "Are you sure you want to reject?",
                //text: "This Purchase Order will be approved!",
               type: "warning",
               icon: "warning",
               buttons: true,
               dangerMode: true,})
                .then((willDelete) => {
                    if (willDelete) {
                       $.ajax({
                        cache: false,
                        url: '@Url.Action("RejectPurchaseOrder", "PurchaseOrder")',
                        contentType: 'application/json; charset=utf-8',
                        data: { GUID: GUID},

                        success: function (myData) {
                            if (myData == "Success") {

                                swal("This Purchase Order has been rejected !", {
                                    icon: "warning",});
                                Pagination(CurrentPage, TotalCount);
                                showlist("#tablebody", searchData);
                            }
                            else {
                                swal("", "Oops! Process Fail !!", "fail");
                            }
                         }

                     });

                    } else {
                        swal("Your data is reverted to default stage!");
                            }
                });
    }
    function pageFunction(current) {
        searchData.CurrentPage = current;
        Pagination(current, TotalCount);
        showlist("#tablebody", searchData);
    }
    function BindEditForm(GUID,Type) {
            $.ajax({
                cache: false,
                url: '@Url.Action("EditPurchaseOrderForm", "PurchaseOrder")',
                data: { GUID: GUID},
                beforeSend: function () {
                },
                success: function (Data) {
                    $("#EditFormModalBody").empty().append(Data);
                },
                complete: function () {
                    $("#DataEditFormModalBody").modal('show');
                    $('#EditPurchaseOrder').submit(function (e) {
                        e.preventDefault();
                        $.ajax({
                            cache: false,
                            url: $(this).attr('action'),
                            data: $(this).serialize(),
                            type: "POST",
                            beforeSend: function () {
                                $('#savebtn').empty().append('<span class="spinner icon-spinner4"></span> Saving...');
                                $('#savebtn').prop("disabled", true);
                            },
                            success: function (myData) {
                                if (myData == "Success") {
                                    if (Type == "Add") {
                                        swal("", "Successfully Saved!", "success");
                                    }
                                    else {
                                        swal("", "Successfully Edited !", "success");
                                    }

                                }
                                else {
                                    swal("", "Oops! Process Fail !!", "fail");
                                }
                                $("#DataEditFormModalBody").modal('hide');
                                showlist("#tablebody", searchData);
                            },
                            complete: function () {
                            }
                        });
                    });
                }
            });
    }
    function PurchaseOrderDetail(GUID) {

            $.ajax({
                cache: false,
                url: '@Url.Action("PurchaseOrderDetail", "PurchaseOrder")',

                data: { GUID: GUID},
                beforeSend: function () {
                },
                success: function (Data) {
                    $("#PurchaseOrderDetailModal").empty().append(Data);
                },
                complete: function () {
                    $("#PurchaseOrderDetail").modal('show');
                }
            });
    }

</script>