@model DataCore.SearchModel.SM_Screen

<div class="col-lg-12">
    <div class="row">
        <div class=" col-lg-6"><h4 class="panel-title font-weight-bold">Screen List</h4></div>
        <div class=" col-lg-6 text-right"><button class="btn btn  btn-labeled  btn-labeled-right rounded-round bg-success-800   " onclick="Add()"><b><i class="icon icon-add"></i></b>Add New</button></div>
    </div>
    <fieldset>
        <legend class="text-semibold">
            <i class="icon-search4 position-left"></i>
            Search Field
        </legend>
        <!-- Search Fliters -->

        @using (Html.BeginForm("SearchScreen", "Screen", FormMethod.Post, new { enctype = "multipart/form-data", @name = "form-addnewUser" }))
        {
            <div class="  mt-10 col-12 row ">
                <div class="form-group col-lg-3">
                    <label class="font-weight-bold">Screen Name</label>
                    @Html.EditorFor(model => model.ScreenName, new { htmlAttributes = new { @class = "form-control", @id = "SearchScreenName", @autocomplete = "off", @name = "SearchScreenName" } })
                    @Html.HiddenFor(model => model.ScreenID, new { htmlAttributes = new { @class = "form-control", @id = "SearchScreenID", @autocomplete = "off", @name = "SearchScreenID" } })
                </div>
                <div class="form-group col-lg-3">
                    <label class="font-weight-bold">Screen Categories</label>
                    <select id="SearchScreenCategory" name="SearchScreenCategory" class=" form-control">
                        @if (ViewBag.ScreenCategoryList != null)
                        {
                            foreach (var data in ViewBag.ScreenCategoryList)
                            {
                                if (ViewBag.SelectedScreenCategory == data.GUID)
                                {
                                    <option selected value="@data.GUID">@data.ScreenCategoryName</option>
                                }
                                else
                                {
                                    <option value="@data.GUID">@data.ScreenCategoryName</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class=" col-lg-6 text-left"><button class="btn bg-teal-700  rounded-round mt-4" type="submit"> Search </button></div>
            </div>
        }

    </fieldset>
    <hr />
    <div class="mt-10 ">
        <div id="tablebody" class="table-responsive">

        </div>
        <!-- Pagination -->
        <div id="pagination"></div>
    </div>
</div>

<div id="DataEditFormModalBody" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModal-label" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="EditFormModalBody">
            </div>

        </div>
    </div>
</div>

<script>
        var CurrentPage = @Html.Raw(Json.Encode(Model.CurrentPage));
        var TotalCount = @Html.Raw(Json.Encode(Model.TotalPage));
        var searchData = {
            'ScreenID': @Html.Raw(Json.Encode(Model.ScreenID)),
            'ScreenName': @Html.Raw(Json.Encode(Model.ScreenName)),
            'ScreenCategoryGUID': @Html.Raw(Json.Encode(Model.ScreenCategoryGUID)),
            'TotalCount': @Html.Raw(Json.Encode(Model.TotalCount)),
            'TotalPage': @Html.Raw(Json.Encode(Model.TotalPage)),
            'CurrentPage': @Html.Raw(Json.Encode(Model.CurrentPage)),
    }

    $(document).ready(function () {

        //Pagination(CurrentPage, TotalCount);
        showlist("#tablebody", searchData);
        $("#SearchScreenName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetScreenName", "Common")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.ScreenName,
                                value: item.ScreenName,
                                id: item.ID
                            };
                        }));
                    }

                })
            },
            select: function (event, ui) {
                $("#ScreenID").val(ui.item.id);
            },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });
    });

    function Edit(GUID) {

        BindEditForm(GUID, "Edit");
    }
    function Add() {

        BindEditForm("","Add");
    }
    function showlist(div, passdata) {
        var data = JSON.stringify(passdata);
            $.ajax({
            cache: false,
            url: '@Url.Action("ScreenListPartial", "Screen")',
            contentType: 'application/json; charset=utf-8',
            data: { getpassdata: data},
            beforesend: function () {
                $(div).empty().append('<div class="text-center"><div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>');
                },
            success: function (myData) {
                 $(div).empty().append(myData);
                },
            complete: function () {
                }
            });
    }
    function Pagination(Page, Count) {
            $.ajax({
            cache: false,
            url: '@Url.Action("Pagination", "Common")',
            data: { Page: Page, Count: Count},
            //beforeSend: function () {
            //    $(div).empty().append('<div class="text-center"><div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div></div>');
            //},
            success: function (myData) {
                $("#pagination").empty().append(myData);
            },
            complete: function () {
            }
        });
    }
    function GetTotalPage() {
        var data = JSON.stringify(passdata);
            $.ajax({
            cache: false,
            url: '@Url.Action("GetTotalPage", "Screen")',
            data: { getpassdata: data},
            success: function (myData) {
                              searchData.TotalPage = myData;
            },
            complete: function () {
            }
        });
    }
    function Delete(GUID) {
           swal({
                title: "Are you sure?",
                text: "You will not be able to recover this data!",
               type: "warning",
               icon: "warning",
               buttons: true,
               dangerMode: true,})
                .then((willDelete) => {
                    if (willDelete) {
                       $.ajax({
                        cache: false,
                        url: '@Url.Action("DeleteScreen", "Screen")',
                        contentType: 'application/json; charset=utf-8',
                        data: { GUID: GUID},

                        success: function (myData) {
                            if (myData == "Success") {

                                swal("Poof! Your data has been deleted!", {
                                icon: "success",});
                                Pagination(CurrentPage, TotalCount);
                                showlist("#tablebody", searchData);
                            }
                            else {
                                swal("", "Oops! Process Fail !!", "fail");
                            }
                         }

                     });

                    } else {
                        swal("Your data is safe!");
                            }
                });
    }
    function pageFunction(current) {
        searchData.CurrentPage = current;
        Pagination(current, TotalCount);
        showlist("#tablebody", searchData);
    }
    function BindEditForm(GUID,Type) {
            $.ajax({
                cache: false,
                url: '@Url.Action("EditScreenForm", "Screen")',
                data: { GUID: GUID},
                beforeSend: function () {
                },
                success: function (Data) {
                    $("#EditFormModalBody").empty().append(Data);
                },
                complete: function () {
                    $("#DataEditFormModalBody").modal('show');
                    $('#EditScreen').submit(function (e) {
                        e.preventDefault();
                        $.ajax({
                            cache: false,
                            url: $(this).attr('action'),
                            data: $(this).serialize(),
                            type: "POST",
                            beforeSend: function () {
                                $('#savebtn').empty().append('<span class="spinner icon-spinner4"></span> Saving...');
                                $('#savebtn').prop("disabled", true);
                            },
                            success: function (myData) {
                                if (myData == "Success") {
                                    if (Type == "Add") {
                                        swal("", "Successfully Saved!", "success");
                                    }
                                    else {
                                        swal("", "Successfully Edited !", "success");
                                    }

                                }
                                else {
                                    swal("", "Oops! Process Fail !!", "fail");
                                }
                                $("#DataEditFormModalBody").modal('hide');
                                showlist("#tablebody", searchData);
                            },
                            complete: function () {
                            }
                        });
                    });
                }
            });
    }

</script>